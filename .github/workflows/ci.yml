name: continuous-integration

on:
  push:
    branches:
    - master
    - v[1-9].*
    tags:
    - v[1-9].*
  pull_request:
    branches:
    - master
    - v[1-9].*

jobs:

# Lints the code using golangci-lint
  ci-go-lint:
    name: ci-go-lint
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Lint kube-router code
      run: |
        make lint

# Runs the kube-router unit tests
  ci-unit-tests:
    name: ci-unit-tests
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Run unit tests for kube-router
      run: |
        make test

# Builds the kube-router binary
  ci-build-kube-router:
    name: ci-build-kube-router
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build kube-router
      run: |
        make kube-router

# Runs goreleaser whenever a tag is created to add binaries to the release
  ci-goreleaser-on-tag:
    name: ci-goreleaser-on-tag
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Builds the container images and pushes them to DockerHub
  ci-build-container:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm,linux/ppc64,linux/s390x
          push: true
          tags: cloudnativelabs/kube-router:${{ github.sha }}
